{"ast":null,"code":"var _jsxFileName = \"/Users/marcelachuqiyamur/Desktop/ADALAB/EVALUACION 3/modulo-3-evaluacion-final-marcelachuqi/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport \"../stylesheets/style.css\";\nimport getDataFromApi from \"../services/api\";\nimport CartoonList from \"./CartoonList\";\nimport Filter from \"./Filter\";\nimport CartoonDetail from \"./CartoonDetail\";\nimport storage from \"../services/local-storage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = props => {\n  _s();\n\n  const [cartoons, setCartoons] = useStatestorage.get(\"cartoons\", []);\n  const [cartoonFilter, setCartoonFilter] = useState(\"\");\n  useEffect(() => {\n    if (cartoons.length === 0) {\n      getDataFromApi().then(cartoon => {\n        setCartoons(cartoon);\n      });\n    }\n  }, []);\n  useEffect(() => {\n    console.log(\"mi local storage\", cartoons);\n    storage.set(\"cartoons\", cartoons);\n  }, [cartoons]);\n\n  const handleChange = userSearch => {\n    if (userSearch.key === \"name\") {\n      setCartoonFilter(userSearch.value);\n    }\n  };\n\n  const filteredCartoon = cartoons.filter(cartoon => {\n    return cartoon.name.toUpperCase().includes(cartoonFilter.toUpperCase());\n  });\n\n  const listRender = () => {\n    if (filteredCartoon.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Upss! Parece que no existe este personaje, intenta de nuevo \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(CartoonList, {\n        cartoons: filteredCartoon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  const renderCartoonDetail = props => {\n    const RouteCartoonId = parseInt(props.match.params.cartoonId);\n    const findCartoon = cartoons.find(cartoon => {\n      return cartoon.id === RouteCartoonId;\n    });\n\n    if (findCartoon !== undefined) {\n      return /*#__PURE__*/_jsxDEV(CartoonDetail, {\n        cartoon: findCartoon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 14\n      }, this);\n    } else {\n      /*#__PURE__*/\n      _jsxDEV(\"p\", {\n        children: \" NOT FOUND \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        component: App,\n        children: [/*#__PURE__*/_jsxDEV(Filter, {\n          handleChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), listRender()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/cartoon/:cartoonId\",\n        render: renderCartoonDetail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"gBQGUNErdN8NaLCqkl+9RAWyI8o=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/marcelachuqiyamur/Desktop/ADALAB/EVALUACION 3/modulo-3-evaluacion-final-marcelachuqi/src/components/App.js"],"names":["React","useEffect","useState","Route","Switch","getDataFromApi","CartoonList","Filter","CartoonDetail","storage","App","props","cartoons","setCartoons","useStatestorage","get","cartoonFilter","setCartoonFilter","length","then","cartoon","console","log","set","handleChange","userSearch","key","value","filteredCartoon","filter","name","toUpperCase","includes","listRender","renderCartoonDetail","RouteCartoonId","parseInt","match","params","cartoonId","findCartoon","find","id","undefined"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport \"../stylesheets/style.css\";\nimport getDataFromApi from \"../services/api\";\nimport CartoonList from \"./CartoonList\";\nimport Filter from \"./Filter\";\nimport CartoonDetail from \"./CartoonDetail\";\nimport storage from \"../services/local-storage\";\n\nconst App = (props) => {\n  const [cartoons, setCartoons] = useStatestorage.get(\"cartoons\", []);\n  const [cartoonFilter, setCartoonFilter] = useState(\"\");\n\n  useEffect(() => {\n    if (cartoons.length === 0) {\n      getDataFromApi().then((cartoon) => {\n        setCartoons(cartoon);\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    console.log(\"mi local storage\", cartoons);\n    storage.set(\"cartoons\", cartoons);\n  }, [cartoons]);\n\n  const handleChange = (userSearch) => {\n    if (userSearch.key === \"name\") {\n      setCartoonFilter(userSearch.value);\n    }\n  };\n\n  const filteredCartoon = cartoons.filter((cartoon) => {\n    return cartoon.name.toUpperCase().includes(cartoonFilter.toUpperCase());\n  });\n\n  const listRender = () => {\n    if (filteredCartoon.length === 0) {\n      return (\n        <p> Upss! Parece que no existe este personaje, intenta de nuevo </p>\n      );\n    } else {\n      return <CartoonList cartoons={filteredCartoon} />;\n    }\n  };\n\n  const renderCartoonDetail = (props) => {\n    const RouteCartoonId = parseInt(props.match.params.cartoonId);\n    const findCartoon = cartoons.find((cartoon) => {\n      return cartoon.id === RouteCartoonId;\n    });\n    if (findCartoon !== undefined) {\n      return <CartoonDetail cartoon={findCartoon} />;\n    } else {\n      <p> NOT FOUND </p>;\n    }\n  };\n\n  return (\n    <>\n      <Switch>\n        <Route exact path=\"/\" component={App}>\n          <Filter handleChange={handleChange} />\n          {listRender()}\n        </Route>\n        <Route path=\"/cartoon/:cartoonId\" render={renderCartoonDetail} />\n      </Switch>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}